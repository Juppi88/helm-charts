apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "common.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "common.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "common.serviceAccountName" . }}
      securityContext:
        fsGroup: 50 # This is the group of the SSH server
      containers:
      - name: nginx
        image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
        imagePullPolicy: {{ .Values.nginx.image.pullPolicy | default "IfNotPresent" | quote }}
        ports:
        - name: http
          containerPort: 8080 # Default port for NGINX image
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: http
        readinessProbe:
          tcpSocket:
            port: http
        volumeMounts:
        - mountPath: /var/www/html
          name: {{ .Release.Name }}
        resources: {{- toYaml .Values.nginx.resources | nindent 10 }}
      - name: ssh
        image: "{{ .Values.ssh.image.repository }}:{{ .Values.ssh.image.tag }}"
        imagePullPolicy: {{ .Values.ssh.image.pullPolicy | default "IfNotPresent" | quote }}
        ports:
        - name: ssh
          containerPort: 2222 # Default port for OpenSSH server image
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: ssh
          initialDelaySeconds: 60
          timeoutSeconds: 10
          periodSeconds: 60
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: ssh
          initialDelaySeconds: 60
          timeoutSeconds: 10
          periodSeconds: 60
          failureThreshold: 3
        env:
        - name: USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "password-{{ .Release.Name }}"
              key: ssh-password
        - name: PASSWORD_ACCESS
          value: "true"
        - name: USER_NAME
          value: "admin"
        - name: PUID
          value: "14"
        - name: PGID
          value: "50"
        volumeMounts:
        - mountPath: /config/files
          name: {{ .Release.Name }}
        resources: {{- toYaml .Values.ssh.resources | nindent 10 }}
      volumes:
      - name: {{ .Release.Name }}
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}
